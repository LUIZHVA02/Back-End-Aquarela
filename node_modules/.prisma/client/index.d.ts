
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model tbl_endereco
 * 
 */
export type tbl_endereco = $Result.DefaultSelection<Prisma.$tbl_enderecoPayload>
/**
 * Model tbl_usuario
 * 
 */
export type tbl_usuario = $Result.DefaultSelection<Prisma.$tbl_usuarioPayload>
/**
 * Model tbl_usuario_endereco
 * 
 */
export type tbl_usuario_endereco = $Result.DefaultSelection<Prisma.$tbl_usuario_enderecoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Tbl_enderecos
 * const tbl_enderecos = await prisma.tbl_endereco.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Tbl_enderecos
   * const tbl_enderecos = await prisma.tbl_endereco.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.tbl_endereco`: Exposes CRUD operations for the **tbl_endereco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_enderecos
    * const tbl_enderecos = await prisma.tbl_endereco.findMany()
    * ```
    */
  get tbl_endereco(): Prisma.tbl_enderecoDelegate<ExtArgs>;

  /**
   * `prisma.tbl_usuario`: Exposes CRUD operations for the **tbl_usuario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_usuarios
    * const tbl_usuarios = await prisma.tbl_usuario.findMany()
    * ```
    */
  get tbl_usuario(): Prisma.tbl_usuarioDelegate<ExtArgs>;

  /**
   * `prisma.tbl_usuario_endereco`: Exposes CRUD operations for the **tbl_usuario_endereco** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_usuario_enderecos
    * const tbl_usuario_enderecos = await prisma.tbl_usuario_endereco.findMany()
    * ```
    */
  get tbl_usuario_endereco(): Prisma.tbl_usuario_enderecoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.19.1
   * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    tbl_endereco: 'tbl_endereco',
    tbl_usuario: 'tbl_usuario',
    tbl_usuario_endereco: 'tbl_usuario_endereco'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "tbl_endereco" | "tbl_usuario" | "tbl_usuario_endereco"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      tbl_endereco: {
        payload: Prisma.$tbl_enderecoPayload<ExtArgs>
        fields: Prisma.tbl_enderecoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_enderecoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_enderecoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          findFirst: {
            args: Prisma.tbl_enderecoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_enderecoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          findMany: {
            args: Prisma.tbl_enderecoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>[]
          }
          create: {
            args: Prisma.tbl_enderecoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          createMany: {
            args: Prisma.tbl_enderecoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_enderecoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          update: {
            args: Prisma.tbl_enderecoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_enderecoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_enderecoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_enderecoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_enderecoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_enderecoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_endereco>
          }
          groupBy: {
            args: Prisma.tbl_enderecoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_enderecoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_enderecoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_enderecoCountAggregateOutputType> | number
          }
        }
      }
      tbl_usuario: {
        payload: Prisma.$tbl_usuarioPayload<ExtArgs>
        fields: Prisma.tbl_usuarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_usuarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_usuarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          findFirst: {
            args: Prisma.tbl_usuarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_usuarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          findMany: {
            args: Prisma.tbl_usuarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>[]
          }
          create: {
            args: Prisma.tbl_usuarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          createMany: {
            args: Prisma.tbl_usuarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_usuarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          update: {
            args: Prisma.tbl_usuarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          deleteMany: {
            args: Prisma.tbl_usuarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_usuarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_usuarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuarioPayload>
          }
          aggregate: {
            args: Prisma.Tbl_usuarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_usuario>
          }
          groupBy: {
            args: Prisma.tbl_usuarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_usuarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_usuarioCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_usuarioCountAggregateOutputType> | number
          }
        }
      }
      tbl_usuario_endereco: {
        payload: Prisma.$tbl_usuario_enderecoPayload<ExtArgs>
        fields: Prisma.tbl_usuario_enderecoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_usuario_enderecoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_usuario_enderecoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>
          }
          findFirst: {
            args: Prisma.tbl_usuario_enderecoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_usuario_enderecoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>
          }
          findMany: {
            args: Prisma.tbl_usuario_enderecoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>[]
          }
          create: {
            args: Prisma.tbl_usuario_enderecoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>
          }
          createMany: {
            args: Prisma.tbl_usuario_enderecoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_usuario_enderecoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>
          }
          update: {
            args: Prisma.tbl_usuario_enderecoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>
          }
          deleteMany: {
            args: Prisma.tbl_usuario_enderecoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_usuario_enderecoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_usuario_enderecoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_usuario_enderecoPayload>
          }
          aggregate: {
            args: Prisma.Tbl_usuario_enderecoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_usuario_endereco>
          }
          groupBy: {
            args: Prisma.tbl_usuario_enderecoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_usuario_enderecoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_usuario_enderecoCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_usuario_enderecoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Tbl_enderecoCountOutputType
   */

  export type Tbl_enderecoCountOutputType = {
    tbl_usuario_endereco: number
  }

  export type Tbl_enderecoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuario_endereco?: boolean | Tbl_enderecoCountOutputTypeCountTbl_usuario_enderecoArgs
  }

  // Custom InputTypes
  /**
   * Tbl_enderecoCountOutputType without action
   */
  export type Tbl_enderecoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_enderecoCountOutputType
     */
    select?: Tbl_enderecoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_enderecoCountOutputType without action
   */
  export type Tbl_enderecoCountOutputTypeCountTbl_usuario_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuario_enderecoWhereInput
  }


  /**
   * Count Type Tbl_usuarioCountOutputType
   */

  export type Tbl_usuarioCountOutputType = {
    tbl_usuario_endereco: number
  }

  export type Tbl_usuarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuario_endereco?: boolean | Tbl_usuarioCountOutputTypeCountTbl_usuario_enderecoArgs
  }

  // Custom InputTypes
  /**
   * Tbl_usuarioCountOutputType without action
   */
  export type Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tbl_usuarioCountOutputType
     */
    select?: Tbl_usuarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tbl_usuarioCountOutputType without action
   */
  export type Tbl_usuarioCountOutputTypeCountTbl_usuario_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuario_enderecoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model tbl_endereco
   */

  export type AggregateTbl_endereco = {
    _count: Tbl_enderecoCountAggregateOutputType | null
    _avg: Tbl_enderecoAvgAggregateOutputType | null
    _sum: Tbl_enderecoSumAggregateOutputType | null
    _min: Tbl_enderecoMinAggregateOutputType | null
    _max: Tbl_enderecoMaxAggregateOutputType | null
  }

  export type Tbl_enderecoAvgAggregateOutputType = {
    id_endereco: number | null
    numero_casa: number | null
  }

  export type Tbl_enderecoSumAggregateOutputType = {
    id_endereco: number | null
    numero_casa: number | null
  }

  export type Tbl_enderecoMinAggregateOutputType = {
    id_endereco: number | null
    logradouro: string | null
    numero_casa: number | null
    complemento: string | null
    bairro: string | null
    estado: string | null
    cidade: string | null
    cep: string | null
    status: boolean | null
  }

  export type Tbl_enderecoMaxAggregateOutputType = {
    id_endereco: number | null
    logradouro: string | null
    numero_casa: number | null
    complemento: string | null
    bairro: string | null
    estado: string | null
    cidade: string | null
    cep: string | null
    status: boolean | null
  }

  export type Tbl_enderecoCountAggregateOutputType = {
    id_endereco: number
    logradouro: number
    numero_casa: number
    complemento: number
    bairro: number
    estado: number
    cidade: number
    cep: number
    status: number
    _all: number
  }


  export type Tbl_enderecoAvgAggregateInputType = {
    id_endereco?: true
    numero_casa?: true
  }

  export type Tbl_enderecoSumAggregateInputType = {
    id_endereco?: true
    numero_casa?: true
  }

  export type Tbl_enderecoMinAggregateInputType = {
    id_endereco?: true
    logradouro?: true
    numero_casa?: true
    complemento?: true
    bairro?: true
    estado?: true
    cidade?: true
    cep?: true
    status?: true
  }

  export type Tbl_enderecoMaxAggregateInputType = {
    id_endereco?: true
    logradouro?: true
    numero_casa?: true
    complemento?: true
    bairro?: true
    estado?: true
    cidade?: true
    cep?: true
    status?: true
  }

  export type Tbl_enderecoCountAggregateInputType = {
    id_endereco?: true
    logradouro?: true
    numero_casa?: true
    complemento?: true
    bairro?: true
    estado?: true
    cidade?: true
    cep?: true
    status?: true
    _all?: true
  }

  export type Tbl_enderecoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_endereco to aggregate.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_enderecos
    **/
    _count?: true | Tbl_enderecoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_enderecoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_enderecoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_enderecoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_enderecoMaxAggregateInputType
  }

  export type GetTbl_enderecoAggregateType<T extends Tbl_enderecoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_endereco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_endereco[P]>
      : GetScalarType<T[P], AggregateTbl_endereco[P]>
  }




  export type tbl_enderecoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_enderecoWhereInput
    orderBy?: tbl_enderecoOrderByWithAggregationInput | tbl_enderecoOrderByWithAggregationInput[]
    by: Tbl_enderecoScalarFieldEnum[] | Tbl_enderecoScalarFieldEnum
    having?: tbl_enderecoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_enderecoCountAggregateInputType | true
    _avg?: Tbl_enderecoAvgAggregateInputType
    _sum?: Tbl_enderecoSumAggregateInputType
    _min?: Tbl_enderecoMinAggregateInputType
    _max?: Tbl_enderecoMaxAggregateInputType
  }

  export type Tbl_enderecoGroupByOutputType = {
    id_endereco: number
    logradouro: string
    numero_casa: number
    complemento: string | null
    bairro: string
    estado: string
    cidade: string
    cep: string | null
    status: boolean
    _count: Tbl_enderecoCountAggregateOutputType | null
    _avg: Tbl_enderecoAvgAggregateOutputType | null
    _sum: Tbl_enderecoSumAggregateOutputType | null
    _min: Tbl_enderecoMinAggregateOutputType | null
    _max: Tbl_enderecoMaxAggregateOutputType | null
  }

  type GetTbl_enderecoGroupByPayload<T extends tbl_enderecoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_enderecoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_enderecoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_enderecoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_enderecoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_enderecoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_endereco?: boolean
    logradouro?: boolean
    numero_casa?: boolean
    complemento?: boolean
    bairro?: boolean
    estado?: boolean
    cidade?: boolean
    cep?: boolean
    status?: boolean
    tbl_usuario_endereco?: boolean | tbl_endereco$tbl_usuario_enderecoArgs<ExtArgs>
    _count?: boolean | Tbl_enderecoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_endereco"]>


  export type tbl_enderecoSelectScalar = {
    id_endereco?: boolean
    logradouro?: boolean
    numero_casa?: boolean
    complemento?: boolean
    bairro?: boolean
    estado?: boolean
    cidade?: boolean
    cep?: boolean
    status?: boolean
  }

  export type tbl_enderecoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuario_endereco?: boolean | tbl_endereco$tbl_usuario_enderecoArgs<ExtArgs>
    _count?: boolean | Tbl_enderecoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_enderecoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_endereco"
    objects: {
      tbl_usuario_endereco: Prisma.$tbl_usuario_enderecoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_endereco: number
      logradouro: string
      numero_casa: number
      complemento: string | null
      bairro: string
      estado: string
      cidade: string
      cep: string | null
      status: boolean
    }, ExtArgs["result"]["tbl_endereco"]>
    composites: {}
  }

  type tbl_enderecoGetPayload<S extends boolean | null | undefined | tbl_enderecoDefaultArgs> = $Result.GetResult<Prisma.$tbl_enderecoPayload, S>

  type tbl_enderecoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_enderecoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_enderecoCountAggregateInputType | true
    }

  export interface tbl_enderecoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_endereco'], meta: { name: 'tbl_endereco' } }
    /**
     * Find zero or one Tbl_endereco that matches the filter.
     * @param {tbl_enderecoFindUniqueArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_enderecoFindUniqueArgs>(args: SelectSubset<T, tbl_enderecoFindUniqueArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_endereco that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_enderecoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_enderecoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_enderecoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_endereco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoFindFirstArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_enderecoFindFirstArgs>(args?: SelectSubset<T, tbl_enderecoFindFirstArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_endereco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoFindFirstOrThrowArgs} args - Arguments to find a Tbl_endereco
     * @example
     * // Get one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_enderecoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_enderecoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_enderecos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_enderecos
     * const tbl_enderecos = await prisma.tbl_endereco.findMany()
     * 
     * // Get first 10 Tbl_enderecos
     * const tbl_enderecos = await prisma.tbl_endereco.findMany({ take: 10 })
     * 
     * // Only select the `id_endereco`
     * const tbl_enderecoWithId_enderecoOnly = await prisma.tbl_endereco.findMany({ select: { id_endereco: true } })
     * 
     */
    findMany<T extends tbl_enderecoFindManyArgs>(args?: SelectSubset<T, tbl_enderecoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_endereco.
     * @param {tbl_enderecoCreateArgs} args - Arguments to create a Tbl_endereco.
     * @example
     * // Create one Tbl_endereco
     * const Tbl_endereco = await prisma.tbl_endereco.create({
     *   data: {
     *     // ... data to create a Tbl_endereco
     *   }
     * })
     * 
     */
    create<T extends tbl_enderecoCreateArgs>(args: SelectSubset<T, tbl_enderecoCreateArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_enderecos.
     * @param {tbl_enderecoCreateManyArgs} args - Arguments to create many Tbl_enderecos.
     * @example
     * // Create many Tbl_enderecos
     * const tbl_endereco = await prisma.tbl_endereco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_enderecoCreateManyArgs>(args?: SelectSubset<T, tbl_enderecoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_endereco.
     * @param {tbl_enderecoDeleteArgs} args - Arguments to delete one Tbl_endereco.
     * @example
     * // Delete one Tbl_endereco
     * const Tbl_endereco = await prisma.tbl_endereco.delete({
     *   where: {
     *     // ... filter to delete one Tbl_endereco
     *   }
     * })
     * 
     */
    delete<T extends tbl_enderecoDeleteArgs>(args: SelectSubset<T, tbl_enderecoDeleteArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_endereco.
     * @param {tbl_enderecoUpdateArgs} args - Arguments to update one Tbl_endereco.
     * @example
     * // Update one Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_enderecoUpdateArgs>(args: SelectSubset<T, tbl_enderecoUpdateArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_enderecos.
     * @param {tbl_enderecoDeleteManyArgs} args - Arguments to filter Tbl_enderecos to delete.
     * @example
     * // Delete a few Tbl_enderecos
     * const { count } = await prisma.tbl_endereco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_enderecoDeleteManyArgs>(args?: SelectSubset<T, tbl_enderecoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_enderecos
     * const tbl_endereco = await prisma.tbl_endereco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_enderecoUpdateManyArgs>(args: SelectSubset<T, tbl_enderecoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_endereco.
     * @param {tbl_enderecoUpsertArgs} args - Arguments to update or create a Tbl_endereco.
     * @example
     * // Update or create a Tbl_endereco
     * const tbl_endereco = await prisma.tbl_endereco.upsert({
     *   create: {
     *     // ... data to create a Tbl_endereco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_endereco we want to update
     *   }
     * })
     */
    upsert<T extends tbl_enderecoUpsertArgs>(args: SelectSubset<T, tbl_enderecoUpsertArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoCountArgs} args - Arguments to filter Tbl_enderecos to count.
     * @example
     * // Count the number of Tbl_enderecos
     * const count = await prisma.tbl_endereco.count({
     *   where: {
     *     // ... the filter for the Tbl_enderecos we want to count
     *   }
     * })
    **/
    count<T extends tbl_enderecoCountArgs>(
      args?: Subset<T, tbl_enderecoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_enderecoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_enderecoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_enderecoAggregateArgs>(args: Subset<T, Tbl_enderecoAggregateArgs>): Prisma.PrismaPromise<GetTbl_enderecoAggregateType<T>>

    /**
     * Group by Tbl_endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_enderecoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_enderecoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_enderecoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_enderecoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_enderecoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_enderecoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_endereco model
   */
  readonly fields: tbl_enderecoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_endereco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_enderecoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_usuario_endereco<T extends tbl_endereco$tbl_usuario_enderecoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_endereco$tbl_usuario_enderecoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_endereco model
   */ 
  interface tbl_enderecoFieldRefs {
    readonly id_endereco: FieldRef<"tbl_endereco", 'Int'>
    readonly logradouro: FieldRef<"tbl_endereco", 'String'>
    readonly numero_casa: FieldRef<"tbl_endereco", 'Int'>
    readonly complemento: FieldRef<"tbl_endereco", 'String'>
    readonly bairro: FieldRef<"tbl_endereco", 'String'>
    readonly estado: FieldRef<"tbl_endereco", 'String'>
    readonly cidade: FieldRef<"tbl_endereco", 'String'>
    readonly cep: FieldRef<"tbl_endereco", 'String'>
    readonly status: FieldRef<"tbl_endereco", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_endereco findUnique
   */
  export type tbl_enderecoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco findUniqueOrThrow
   */
  export type tbl_enderecoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco findFirst
   */
  export type tbl_enderecoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_enderecos.
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_enderecos.
     */
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco findFirstOrThrow
   */
  export type tbl_enderecoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_endereco to fetch.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_enderecos.
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_enderecos.
     */
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco findMany
   */
  export type tbl_enderecoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_enderecos to fetch.
     */
    where?: tbl_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_enderecos to fetch.
     */
    orderBy?: tbl_enderecoOrderByWithRelationInput | tbl_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_enderecos.
     */
    cursor?: tbl_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_enderecos.
     */
    skip?: number
    distinct?: Tbl_enderecoScalarFieldEnum | Tbl_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco create
   */
  export type tbl_enderecoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_endereco.
     */
    data: XOR<tbl_enderecoCreateInput, tbl_enderecoUncheckedCreateInput>
  }

  /**
   * tbl_endereco createMany
   */
  export type tbl_enderecoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_enderecos.
     */
    data: tbl_enderecoCreateManyInput | tbl_enderecoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_endereco update
   */
  export type tbl_enderecoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_endereco.
     */
    data: XOR<tbl_enderecoUpdateInput, tbl_enderecoUncheckedUpdateInput>
    /**
     * Choose, which tbl_endereco to update.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco updateMany
   */
  export type tbl_enderecoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_enderecos.
     */
    data: XOR<tbl_enderecoUpdateManyMutationInput, tbl_enderecoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_enderecos to update
     */
    where?: tbl_enderecoWhereInput
  }

  /**
   * tbl_endereco upsert
   */
  export type tbl_enderecoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_endereco to update in case it exists.
     */
    where: tbl_enderecoWhereUniqueInput
    /**
     * In case the tbl_endereco found by the `where` argument doesn't exist, create a new tbl_endereco with this data.
     */
    create: XOR<tbl_enderecoCreateInput, tbl_enderecoUncheckedCreateInput>
    /**
     * In case the tbl_endereco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_enderecoUpdateInput, tbl_enderecoUncheckedUpdateInput>
  }

  /**
   * tbl_endereco delete
   */
  export type tbl_enderecoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
    /**
     * Filter which tbl_endereco to delete.
     */
    where: tbl_enderecoWhereUniqueInput
  }

  /**
   * tbl_endereco deleteMany
   */
  export type tbl_enderecoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_enderecos to delete
     */
    where?: tbl_enderecoWhereInput
  }

  /**
   * tbl_endereco.tbl_usuario_endereco
   */
  export type tbl_endereco$tbl_usuario_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    where?: tbl_usuario_enderecoWhereInput
    orderBy?: tbl_usuario_enderecoOrderByWithRelationInput | tbl_usuario_enderecoOrderByWithRelationInput[]
    cursor?: tbl_usuario_enderecoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_usuario_enderecoScalarFieldEnum | Tbl_usuario_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_endereco without action
   */
  export type tbl_enderecoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_endereco
     */
    select?: tbl_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_enderecoInclude<ExtArgs> | null
  }


  /**
   * Model tbl_usuario
   */

  export type AggregateTbl_usuario = {
    _count: Tbl_usuarioCountAggregateOutputType | null
    _avg: Tbl_usuarioAvgAggregateOutputType | null
    _sum: Tbl_usuarioSumAggregateOutputType | null
    _min: Tbl_usuarioMinAggregateOutputType | null
    _max: Tbl_usuarioMaxAggregateOutputType | null
  }

  export type Tbl_usuarioAvgAggregateOutputType = {
    id_usuario: number | null
  }

  export type Tbl_usuarioSumAggregateOutputType = {
    id_usuario: number | null
  }

  export type Tbl_usuarioMinAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    nome_usuario: string | null
    foto_usuario: string | null
    descricao: string | null
    email: string | null
    senha: string | null
    cpf: string | null
    data_nascimento: Date | null
    telefone: string | null
    disponibilidade: boolean | null
    status: boolean | null
  }

  export type Tbl_usuarioMaxAggregateOutputType = {
    id_usuario: number | null
    nome: string | null
    nome_usuario: string | null
    foto_usuario: string | null
    descricao: string | null
    email: string | null
    senha: string | null
    cpf: string | null
    data_nascimento: Date | null
    telefone: string | null
    disponibilidade: boolean | null
    status: boolean | null
  }

  export type Tbl_usuarioCountAggregateOutputType = {
    id_usuario: number
    nome: number
    nome_usuario: number
    foto_usuario: number
    descricao: number
    email: number
    senha: number
    cpf: number
    data_nascimento: number
    telefone: number
    disponibilidade: number
    status: number
    _all: number
  }


  export type Tbl_usuarioAvgAggregateInputType = {
    id_usuario?: true
  }

  export type Tbl_usuarioSumAggregateInputType = {
    id_usuario?: true
  }

  export type Tbl_usuarioMinAggregateInputType = {
    id_usuario?: true
    nome?: true
    nome_usuario?: true
    foto_usuario?: true
    descricao?: true
    email?: true
    senha?: true
    cpf?: true
    data_nascimento?: true
    telefone?: true
    disponibilidade?: true
    status?: true
  }

  export type Tbl_usuarioMaxAggregateInputType = {
    id_usuario?: true
    nome?: true
    nome_usuario?: true
    foto_usuario?: true
    descricao?: true
    email?: true
    senha?: true
    cpf?: true
    data_nascimento?: true
    telefone?: true
    disponibilidade?: true
    status?: true
  }

  export type Tbl_usuarioCountAggregateInputType = {
    id_usuario?: true
    nome?: true
    nome_usuario?: true
    foto_usuario?: true
    descricao?: true
    email?: true
    senha?: true
    cpf?: true
    data_nascimento?: true
    telefone?: true
    disponibilidade?: true
    status?: true
    _all?: true
  }

  export type Tbl_usuarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuario to aggregate.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_usuarios
    **/
    _count?: true | Tbl_usuarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_usuarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_usuarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_usuarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_usuarioMaxAggregateInputType
  }

  export type GetTbl_usuarioAggregateType<T extends Tbl_usuarioAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_usuario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_usuario[P]>
      : GetScalarType<T[P], AggregateTbl_usuario[P]>
  }




  export type tbl_usuarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuarioWhereInput
    orderBy?: tbl_usuarioOrderByWithAggregationInput | tbl_usuarioOrderByWithAggregationInput[]
    by: Tbl_usuarioScalarFieldEnum[] | Tbl_usuarioScalarFieldEnum
    having?: tbl_usuarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_usuarioCountAggregateInputType | true
    _avg?: Tbl_usuarioAvgAggregateInputType
    _sum?: Tbl_usuarioSumAggregateInputType
    _min?: Tbl_usuarioMinAggregateInputType
    _max?: Tbl_usuarioMaxAggregateInputType
  }

  export type Tbl_usuarioGroupByOutputType = {
    id_usuario: number
    nome: string
    nome_usuario: string
    foto_usuario: string | null
    descricao: string | null
    email: string
    senha: string
    cpf: string
    data_nascimento: Date
    telefone: string
    disponibilidade: boolean
    status: boolean
    _count: Tbl_usuarioCountAggregateOutputType | null
    _avg: Tbl_usuarioAvgAggregateOutputType | null
    _sum: Tbl_usuarioSumAggregateOutputType | null
    _min: Tbl_usuarioMinAggregateOutputType | null
    _max: Tbl_usuarioMaxAggregateOutputType | null
  }

  type GetTbl_usuarioGroupByPayload<T extends tbl_usuarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_usuarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_usuarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_usuarioGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_usuarioGroupByOutputType[P]>
        }
      >
    >


  export type tbl_usuarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario?: boolean
    nome?: boolean
    nome_usuario?: boolean
    foto_usuario?: boolean
    descricao?: boolean
    email?: boolean
    senha?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    telefone?: boolean
    disponibilidade?: boolean
    status?: boolean
    tbl_usuario_endereco?: boolean | tbl_usuario$tbl_usuario_enderecoArgs<ExtArgs>
    _count?: boolean | Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_usuario"]>


  export type tbl_usuarioSelectScalar = {
    id_usuario?: boolean
    nome?: boolean
    nome_usuario?: boolean
    foto_usuario?: boolean
    descricao?: boolean
    email?: boolean
    senha?: boolean
    cpf?: boolean
    data_nascimento?: boolean
    telefone?: boolean
    disponibilidade?: boolean
    status?: boolean
  }

  export type tbl_usuarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_usuario_endereco?: boolean | tbl_usuario$tbl_usuario_enderecoArgs<ExtArgs>
    _count?: boolean | Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $tbl_usuarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_usuario"
    objects: {
      tbl_usuario_endereco: Prisma.$tbl_usuario_enderecoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario: number
      nome: string
      nome_usuario: string
      foto_usuario: string | null
      descricao: string | null
      email: string
      senha: string
      cpf: string
      data_nascimento: Date
      telefone: string
      disponibilidade: boolean
      status: boolean
    }, ExtArgs["result"]["tbl_usuario"]>
    composites: {}
  }

  type tbl_usuarioGetPayload<S extends boolean | null | undefined | tbl_usuarioDefaultArgs> = $Result.GetResult<Prisma.$tbl_usuarioPayload, S>

  type tbl_usuarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_usuarioFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_usuarioCountAggregateInputType | true
    }

  export interface tbl_usuarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_usuario'], meta: { name: 'tbl_usuario' } }
    /**
     * Find zero or one Tbl_usuario that matches the filter.
     * @param {tbl_usuarioFindUniqueArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_usuarioFindUniqueArgs>(args: SelectSubset<T, tbl_usuarioFindUniqueArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_usuario that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_usuarioFindUniqueOrThrowArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_usuarioFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_usuarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_usuario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioFindFirstArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_usuarioFindFirstArgs>(args?: SelectSubset<T, tbl_usuarioFindFirstArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_usuario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioFindFirstOrThrowArgs} args - Arguments to find a Tbl_usuario
     * @example
     * // Get one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_usuarioFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_usuarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuario.findMany()
     * 
     * // Get first 10 Tbl_usuarios
     * const tbl_usuarios = await prisma.tbl_usuario.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario`
     * const tbl_usuarioWithId_usuarioOnly = await prisma.tbl_usuario.findMany({ select: { id_usuario: true } })
     * 
     */
    findMany<T extends tbl_usuarioFindManyArgs>(args?: SelectSubset<T, tbl_usuarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_usuario.
     * @param {tbl_usuarioCreateArgs} args - Arguments to create a Tbl_usuario.
     * @example
     * // Create one Tbl_usuario
     * const Tbl_usuario = await prisma.tbl_usuario.create({
     *   data: {
     *     // ... data to create a Tbl_usuario
     *   }
     * })
     * 
     */
    create<T extends tbl_usuarioCreateArgs>(args: SelectSubset<T, tbl_usuarioCreateArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_usuarios.
     * @param {tbl_usuarioCreateManyArgs} args - Arguments to create many Tbl_usuarios.
     * @example
     * // Create many Tbl_usuarios
     * const tbl_usuario = await prisma.tbl_usuario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_usuarioCreateManyArgs>(args?: SelectSubset<T, tbl_usuarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_usuario.
     * @param {tbl_usuarioDeleteArgs} args - Arguments to delete one Tbl_usuario.
     * @example
     * // Delete one Tbl_usuario
     * const Tbl_usuario = await prisma.tbl_usuario.delete({
     *   where: {
     *     // ... filter to delete one Tbl_usuario
     *   }
     * })
     * 
     */
    delete<T extends tbl_usuarioDeleteArgs>(args: SelectSubset<T, tbl_usuarioDeleteArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_usuario.
     * @param {tbl_usuarioUpdateArgs} args - Arguments to update one Tbl_usuario.
     * @example
     * // Update one Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_usuarioUpdateArgs>(args: SelectSubset<T, tbl_usuarioUpdateArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_usuarios.
     * @param {tbl_usuarioDeleteManyArgs} args - Arguments to filter Tbl_usuarios to delete.
     * @example
     * // Delete a few Tbl_usuarios
     * const { count } = await prisma.tbl_usuario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_usuarioDeleteManyArgs>(args?: SelectSubset<T, tbl_usuarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_usuarios
     * const tbl_usuario = await prisma.tbl_usuario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_usuarioUpdateManyArgs>(args: SelectSubset<T, tbl_usuarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_usuario.
     * @param {tbl_usuarioUpsertArgs} args - Arguments to update or create a Tbl_usuario.
     * @example
     * // Update or create a Tbl_usuario
     * const tbl_usuario = await prisma.tbl_usuario.upsert({
     *   create: {
     *     // ... data to create a Tbl_usuario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_usuario we want to update
     *   }
     * })
     */
    upsert<T extends tbl_usuarioUpsertArgs>(args: SelectSubset<T, tbl_usuarioUpsertArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioCountArgs} args - Arguments to filter Tbl_usuarios to count.
     * @example
     * // Count the number of Tbl_usuarios
     * const count = await prisma.tbl_usuario.count({
     *   where: {
     *     // ... the filter for the Tbl_usuarios we want to count
     *   }
     * })
    **/
    count<T extends tbl_usuarioCountArgs>(
      args?: Subset<T, tbl_usuarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_usuarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_usuarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_usuarioAggregateArgs>(args: Subset<T, Tbl_usuarioAggregateArgs>): Prisma.PrismaPromise<GetTbl_usuarioAggregateType<T>>

    /**
     * Group by Tbl_usuario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_usuarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_usuarioGroupByArgs['orderBy'] }
        : { orderBy?: tbl_usuarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_usuarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_usuarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_usuario model
   */
  readonly fields: tbl_usuarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_usuario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_usuarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_usuario_endereco<T extends tbl_usuario$tbl_usuario_enderecoArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuario$tbl_usuario_enderecoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_usuario model
   */ 
  interface tbl_usuarioFieldRefs {
    readonly id_usuario: FieldRef<"tbl_usuario", 'Int'>
    readonly nome: FieldRef<"tbl_usuario", 'String'>
    readonly nome_usuario: FieldRef<"tbl_usuario", 'String'>
    readonly foto_usuario: FieldRef<"tbl_usuario", 'String'>
    readonly descricao: FieldRef<"tbl_usuario", 'String'>
    readonly email: FieldRef<"tbl_usuario", 'String'>
    readonly senha: FieldRef<"tbl_usuario", 'String'>
    readonly cpf: FieldRef<"tbl_usuario", 'String'>
    readonly data_nascimento: FieldRef<"tbl_usuario", 'DateTime'>
    readonly telefone: FieldRef<"tbl_usuario", 'String'>
    readonly disponibilidade: FieldRef<"tbl_usuario", 'Boolean'>
    readonly status: FieldRef<"tbl_usuario", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_usuario findUnique
   */
  export type tbl_usuarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario findUniqueOrThrow
   */
  export type tbl_usuarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario findFirst
   */
  export type tbl_usuarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuarios.
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuarios.
     */
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_usuario findFirstOrThrow
   */
  export type tbl_usuarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario to fetch.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuarios.
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuarios.
     */
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_usuario findMany
   */
  export type tbl_usuarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuarios to fetch.
     */
    where?: tbl_usuarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuarios to fetch.
     */
    orderBy?: tbl_usuarioOrderByWithRelationInput | tbl_usuarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_usuarios.
     */
    cursor?: tbl_usuarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuarios.
     */
    skip?: number
    distinct?: Tbl_usuarioScalarFieldEnum | Tbl_usuarioScalarFieldEnum[]
  }

  /**
   * tbl_usuario create
   */
  export type tbl_usuarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_usuario.
     */
    data: XOR<tbl_usuarioCreateInput, tbl_usuarioUncheckedCreateInput>
  }

  /**
   * tbl_usuario createMany
   */
  export type tbl_usuarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_usuarios.
     */
    data: tbl_usuarioCreateManyInput | tbl_usuarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_usuario update
   */
  export type tbl_usuarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_usuario.
     */
    data: XOR<tbl_usuarioUpdateInput, tbl_usuarioUncheckedUpdateInput>
    /**
     * Choose, which tbl_usuario to update.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario updateMany
   */
  export type tbl_usuarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_usuarios.
     */
    data: XOR<tbl_usuarioUpdateManyMutationInput, tbl_usuarioUncheckedUpdateManyInput>
    /**
     * Filter which tbl_usuarios to update
     */
    where?: tbl_usuarioWhereInput
  }

  /**
   * tbl_usuario upsert
   */
  export type tbl_usuarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_usuario to update in case it exists.
     */
    where: tbl_usuarioWhereUniqueInput
    /**
     * In case the tbl_usuario found by the `where` argument doesn't exist, create a new tbl_usuario with this data.
     */
    create: XOR<tbl_usuarioCreateInput, tbl_usuarioUncheckedCreateInput>
    /**
     * In case the tbl_usuario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_usuarioUpdateInput, tbl_usuarioUncheckedUpdateInput>
  }

  /**
   * tbl_usuario delete
   */
  export type tbl_usuarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
    /**
     * Filter which tbl_usuario to delete.
     */
    where: tbl_usuarioWhereUniqueInput
  }

  /**
   * tbl_usuario deleteMany
   */
  export type tbl_usuarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuarios to delete
     */
    where?: tbl_usuarioWhereInput
  }

  /**
   * tbl_usuario.tbl_usuario_endereco
   */
  export type tbl_usuario$tbl_usuario_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    where?: tbl_usuario_enderecoWhereInput
    orderBy?: tbl_usuario_enderecoOrderByWithRelationInput | tbl_usuario_enderecoOrderByWithRelationInput[]
    cursor?: tbl_usuario_enderecoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tbl_usuario_enderecoScalarFieldEnum | Tbl_usuario_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_usuario without action
   */
  export type tbl_usuarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario
     */
    select?: tbl_usuarioSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuarioInclude<ExtArgs> | null
  }


  /**
   * Model tbl_usuario_endereco
   */

  export type AggregateTbl_usuario_endereco = {
    _count: Tbl_usuario_enderecoCountAggregateOutputType | null
    _avg: Tbl_usuario_enderecoAvgAggregateOutputType | null
    _sum: Tbl_usuario_enderecoSumAggregateOutputType | null
    _min: Tbl_usuario_enderecoMinAggregateOutputType | null
    _max: Tbl_usuario_enderecoMaxAggregateOutputType | null
  }

  export type Tbl_usuario_enderecoAvgAggregateOutputType = {
    id_usuario_endereco: number | null
    id_endereco: number | null
    id_usuario: number | null
  }

  export type Tbl_usuario_enderecoSumAggregateOutputType = {
    id_usuario_endereco: number | null
    id_endereco: number | null
    id_usuario: number | null
  }

  export type Tbl_usuario_enderecoMinAggregateOutputType = {
    id_usuario_endereco: number | null
    id_endereco: number | null
    id_usuario: number | null
    status: boolean | null
  }

  export type Tbl_usuario_enderecoMaxAggregateOutputType = {
    id_usuario_endereco: number | null
    id_endereco: number | null
    id_usuario: number | null
    status: boolean | null
  }

  export type Tbl_usuario_enderecoCountAggregateOutputType = {
    id_usuario_endereco: number
    id_endereco: number
    id_usuario: number
    status: number
    _all: number
  }


  export type Tbl_usuario_enderecoAvgAggregateInputType = {
    id_usuario_endereco?: true
    id_endereco?: true
    id_usuario?: true
  }

  export type Tbl_usuario_enderecoSumAggregateInputType = {
    id_usuario_endereco?: true
    id_endereco?: true
    id_usuario?: true
  }

  export type Tbl_usuario_enderecoMinAggregateInputType = {
    id_usuario_endereco?: true
    id_endereco?: true
    id_usuario?: true
    status?: true
  }

  export type Tbl_usuario_enderecoMaxAggregateInputType = {
    id_usuario_endereco?: true
    id_endereco?: true
    id_usuario?: true
    status?: true
  }

  export type Tbl_usuario_enderecoCountAggregateInputType = {
    id_usuario_endereco?: true
    id_endereco?: true
    id_usuario?: true
    status?: true
    _all?: true
  }

  export type Tbl_usuario_enderecoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuario_endereco to aggregate.
     */
    where?: tbl_usuario_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuario_enderecos to fetch.
     */
    orderBy?: tbl_usuario_enderecoOrderByWithRelationInput | tbl_usuario_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_usuario_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuario_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuario_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_usuario_enderecos
    **/
    _count?: true | Tbl_usuario_enderecoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_usuario_enderecoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_usuario_enderecoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_usuario_enderecoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_usuario_enderecoMaxAggregateInputType
  }

  export type GetTbl_usuario_enderecoAggregateType<T extends Tbl_usuario_enderecoAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_usuario_endereco]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_usuario_endereco[P]>
      : GetScalarType<T[P], AggregateTbl_usuario_endereco[P]>
  }




  export type tbl_usuario_enderecoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_usuario_enderecoWhereInput
    orderBy?: tbl_usuario_enderecoOrderByWithAggregationInput | tbl_usuario_enderecoOrderByWithAggregationInput[]
    by: Tbl_usuario_enderecoScalarFieldEnum[] | Tbl_usuario_enderecoScalarFieldEnum
    having?: tbl_usuario_enderecoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_usuario_enderecoCountAggregateInputType | true
    _avg?: Tbl_usuario_enderecoAvgAggregateInputType
    _sum?: Tbl_usuario_enderecoSumAggregateInputType
    _min?: Tbl_usuario_enderecoMinAggregateInputType
    _max?: Tbl_usuario_enderecoMaxAggregateInputType
  }

  export type Tbl_usuario_enderecoGroupByOutputType = {
    id_usuario_endereco: number
    id_endereco: number
    id_usuario: number
    status: boolean
    _count: Tbl_usuario_enderecoCountAggregateOutputType | null
    _avg: Tbl_usuario_enderecoAvgAggregateOutputType | null
    _sum: Tbl_usuario_enderecoSumAggregateOutputType | null
    _min: Tbl_usuario_enderecoMinAggregateOutputType | null
    _max: Tbl_usuario_enderecoMaxAggregateOutputType | null
  }

  type GetTbl_usuario_enderecoGroupByPayload<T extends tbl_usuario_enderecoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_usuario_enderecoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_usuario_enderecoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_usuario_enderecoGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_usuario_enderecoGroupByOutputType[P]>
        }
      >
    >


  export type tbl_usuario_enderecoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_usuario_endereco?: boolean
    id_endereco?: boolean
    id_usuario?: boolean
    status?: boolean
    tbl_endereco?: boolean | tbl_enderecoDefaultArgs<ExtArgs>
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tbl_usuario_endereco"]>


  export type tbl_usuario_enderecoSelectScalar = {
    id_usuario_endereco?: boolean
    id_endereco?: boolean
    id_usuario?: boolean
    status?: boolean
  }

  export type tbl_usuario_enderecoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tbl_endereco?: boolean | tbl_enderecoDefaultArgs<ExtArgs>
    tbl_usuario?: boolean | tbl_usuarioDefaultArgs<ExtArgs>
  }

  export type $tbl_usuario_enderecoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_usuario_endereco"
    objects: {
      tbl_endereco: Prisma.$tbl_enderecoPayload<ExtArgs>
      tbl_usuario: Prisma.$tbl_usuarioPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_usuario_endereco: number
      id_endereco: number
      id_usuario: number
      status: boolean
    }, ExtArgs["result"]["tbl_usuario_endereco"]>
    composites: {}
  }

  type tbl_usuario_enderecoGetPayload<S extends boolean | null | undefined | tbl_usuario_enderecoDefaultArgs> = $Result.GetResult<Prisma.$tbl_usuario_enderecoPayload, S>

  type tbl_usuario_enderecoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_usuario_enderecoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_usuario_enderecoCountAggregateInputType | true
    }

  export interface tbl_usuario_enderecoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_usuario_endereco'], meta: { name: 'tbl_usuario_endereco' } }
    /**
     * Find zero or one Tbl_usuario_endereco that matches the filter.
     * @param {tbl_usuario_enderecoFindUniqueArgs} args - Arguments to find a Tbl_usuario_endereco
     * @example
     * // Get one Tbl_usuario_endereco
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_usuario_enderecoFindUniqueArgs>(args: SelectSubset<T, tbl_usuario_enderecoFindUniqueArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_usuario_endereco that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_usuario_enderecoFindUniqueOrThrowArgs} args - Arguments to find a Tbl_usuario_endereco
     * @example
     * // Get one Tbl_usuario_endereco
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_usuario_enderecoFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_usuario_enderecoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_usuario_endereco that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuario_enderecoFindFirstArgs} args - Arguments to find a Tbl_usuario_endereco
     * @example
     * // Get one Tbl_usuario_endereco
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_usuario_enderecoFindFirstArgs>(args?: SelectSubset<T, tbl_usuario_enderecoFindFirstArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_usuario_endereco that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuario_enderecoFindFirstOrThrowArgs} args - Arguments to find a Tbl_usuario_endereco
     * @example
     * // Get one Tbl_usuario_endereco
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_usuario_enderecoFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_usuario_enderecoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_usuario_enderecos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuario_enderecoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_usuario_enderecos
     * const tbl_usuario_enderecos = await prisma.tbl_usuario_endereco.findMany()
     * 
     * // Get first 10 Tbl_usuario_enderecos
     * const tbl_usuario_enderecos = await prisma.tbl_usuario_endereco.findMany({ take: 10 })
     * 
     * // Only select the `id_usuario_endereco`
     * const tbl_usuario_enderecoWithId_usuario_enderecoOnly = await prisma.tbl_usuario_endereco.findMany({ select: { id_usuario_endereco: true } })
     * 
     */
    findMany<T extends tbl_usuario_enderecoFindManyArgs>(args?: SelectSubset<T, tbl_usuario_enderecoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_usuario_endereco.
     * @param {tbl_usuario_enderecoCreateArgs} args - Arguments to create a Tbl_usuario_endereco.
     * @example
     * // Create one Tbl_usuario_endereco
     * const Tbl_usuario_endereco = await prisma.tbl_usuario_endereco.create({
     *   data: {
     *     // ... data to create a Tbl_usuario_endereco
     *   }
     * })
     * 
     */
    create<T extends tbl_usuario_enderecoCreateArgs>(args: SelectSubset<T, tbl_usuario_enderecoCreateArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_usuario_enderecos.
     * @param {tbl_usuario_enderecoCreateManyArgs} args - Arguments to create many Tbl_usuario_enderecos.
     * @example
     * // Create many Tbl_usuario_enderecos
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_usuario_enderecoCreateManyArgs>(args?: SelectSubset<T, tbl_usuario_enderecoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_usuario_endereco.
     * @param {tbl_usuario_enderecoDeleteArgs} args - Arguments to delete one Tbl_usuario_endereco.
     * @example
     * // Delete one Tbl_usuario_endereco
     * const Tbl_usuario_endereco = await prisma.tbl_usuario_endereco.delete({
     *   where: {
     *     // ... filter to delete one Tbl_usuario_endereco
     *   }
     * })
     * 
     */
    delete<T extends tbl_usuario_enderecoDeleteArgs>(args: SelectSubset<T, tbl_usuario_enderecoDeleteArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_usuario_endereco.
     * @param {tbl_usuario_enderecoUpdateArgs} args - Arguments to update one Tbl_usuario_endereco.
     * @example
     * // Update one Tbl_usuario_endereco
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_usuario_enderecoUpdateArgs>(args: SelectSubset<T, tbl_usuario_enderecoUpdateArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_usuario_enderecos.
     * @param {tbl_usuario_enderecoDeleteManyArgs} args - Arguments to filter Tbl_usuario_enderecos to delete.
     * @example
     * // Delete a few Tbl_usuario_enderecos
     * const { count } = await prisma.tbl_usuario_endereco.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_usuario_enderecoDeleteManyArgs>(args?: SelectSubset<T, tbl_usuario_enderecoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_usuario_enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuario_enderecoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_usuario_enderecos
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_usuario_enderecoUpdateManyArgs>(args: SelectSubset<T, tbl_usuario_enderecoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_usuario_endereco.
     * @param {tbl_usuario_enderecoUpsertArgs} args - Arguments to update or create a Tbl_usuario_endereco.
     * @example
     * // Update or create a Tbl_usuario_endereco
     * const tbl_usuario_endereco = await prisma.tbl_usuario_endereco.upsert({
     *   create: {
     *     // ... data to create a Tbl_usuario_endereco
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_usuario_endereco we want to update
     *   }
     * })
     */
    upsert<T extends tbl_usuario_enderecoUpsertArgs>(args: SelectSubset<T, tbl_usuario_enderecoUpsertArgs<ExtArgs>>): Prisma__tbl_usuario_enderecoClient<$Result.GetResult<Prisma.$tbl_usuario_enderecoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_usuario_enderecos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuario_enderecoCountArgs} args - Arguments to filter Tbl_usuario_enderecos to count.
     * @example
     * // Count the number of Tbl_usuario_enderecos
     * const count = await prisma.tbl_usuario_endereco.count({
     *   where: {
     *     // ... the filter for the Tbl_usuario_enderecos we want to count
     *   }
     * })
    **/
    count<T extends tbl_usuario_enderecoCountArgs>(
      args?: Subset<T, tbl_usuario_enderecoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_usuario_enderecoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_usuario_endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_usuario_enderecoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_usuario_enderecoAggregateArgs>(args: Subset<T, Tbl_usuario_enderecoAggregateArgs>): Prisma.PrismaPromise<GetTbl_usuario_enderecoAggregateType<T>>

    /**
     * Group by Tbl_usuario_endereco.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_usuario_enderecoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_usuario_enderecoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_usuario_enderecoGroupByArgs['orderBy'] }
        : { orderBy?: tbl_usuario_enderecoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_usuario_enderecoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_usuario_enderecoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_usuario_endereco model
   */
  readonly fields: tbl_usuario_enderecoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_usuario_endereco.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_usuario_enderecoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tbl_endereco<T extends tbl_enderecoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_enderecoDefaultArgs<ExtArgs>>): Prisma__tbl_enderecoClient<$Result.GetResult<Prisma.$tbl_enderecoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    tbl_usuario<T extends tbl_usuarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tbl_usuarioDefaultArgs<ExtArgs>>): Prisma__tbl_usuarioClient<$Result.GetResult<Prisma.$tbl_usuarioPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_usuario_endereco model
   */ 
  interface tbl_usuario_enderecoFieldRefs {
    readonly id_usuario_endereco: FieldRef<"tbl_usuario_endereco", 'Int'>
    readonly id_endereco: FieldRef<"tbl_usuario_endereco", 'Int'>
    readonly id_usuario: FieldRef<"tbl_usuario_endereco", 'Int'>
    readonly status: FieldRef<"tbl_usuario_endereco", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * tbl_usuario_endereco findUnique
   */
  export type tbl_usuario_enderecoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario_endereco to fetch.
     */
    where: tbl_usuario_enderecoWhereUniqueInput
  }

  /**
   * tbl_usuario_endereco findUniqueOrThrow
   */
  export type tbl_usuario_enderecoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario_endereco to fetch.
     */
    where: tbl_usuario_enderecoWhereUniqueInput
  }

  /**
   * tbl_usuario_endereco findFirst
   */
  export type tbl_usuario_enderecoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario_endereco to fetch.
     */
    where?: tbl_usuario_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuario_enderecos to fetch.
     */
    orderBy?: tbl_usuario_enderecoOrderByWithRelationInput | tbl_usuario_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuario_enderecos.
     */
    cursor?: tbl_usuario_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuario_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuario_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuario_enderecos.
     */
    distinct?: Tbl_usuario_enderecoScalarFieldEnum | Tbl_usuario_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_usuario_endereco findFirstOrThrow
   */
  export type tbl_usuario_enderecoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario_endereco to fetch.
     */
    where?: tbl_usuario_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuario_enderecos to fetch.
     */
    orderBy?: tbl_usuario_enderecoOrderByWithRelationInput | tbl_usuario_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_usuario_enderecos.
     */
    cursor?: tbl_usuario_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuario_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuario_enderecos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_usuario_enderecos.
     */
    distinct?: Tbl_usuario_enderecoScalarFieldEnum | Tbl_usuario_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_usuario_endereco findMany
   */
  export type tbl_usuario_enderecoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * Filter, which tbl_usuario_enderecos to fetch.
     */
    where?: tbl_usuario_enderecoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_usuario_enderecos to fetch.
     */
    orderBy?: tbl_usuario_enderecoOrderByWithRelationInput | tbl_usuario_enderecoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_usuario_enderecos.
     */
    cursor?: tbl_usuario_enderecoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_usuario_enderecos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_usuario_enderecos.
     */
    skip?: number
    distinct?: Tbl_usuario_enderecoScalarFieldEnum | Tbl_usuario_enderecoScalarFieldEnum[]
  }

  /**
   * tbl_usuario_endereco create
   */
  export type tbl_usuario_enderecoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * The data needed to create a tbl_usuario_endereco.
     */
    data: XOR<tbl_usuario_enderecoCreateInput, tbl_usuario_enderecoUncheckedCreateInput>
  }

  /**
   * tbl_usuario_endereco createMany
   */
  export type tbl_usuario_enderecoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_usuario_enderecos.
     */
    data: tbl_usuario_enderecoCreateManyInput | tbl_usuario_enderecoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tbl_usuario_endereco update
   */
  export type tbl_usuario_enderecoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * The data needed to update a tbl_usuario_endereco.
     */
    data: XOR<tbl_usuario_enderecoUpdateInput, tbl_usuario_enderecoUncheckedUpdateInput>
    /**
     * Choose, which tbl_usuario_endereco to update.
     */
    where: tbl_usuario_enderecoWhereUniqueInput
  }

  /**
   * tbl_usuario_endereco updateMany
   */
  export type tbl_usuario_enderecoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_usuario_enderecos.
     */
    data: XOR<tbl_usuario_enderecoUpdateManyMutationInput, tbl_usuario_enderecoUncheckedUpdateManyInput>
    /**
     * Filter which tbl_usuario_enderecos to update
     */
    where?: tbl_usuario_enderecoWhereInput
  }

  /**
   * tbl_usuario_endereco upsert
   */
  export type tbl_usuario_enderecoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * The filter to search for the tbl_usuario_endereco to update in case it exists.
     */
    where: tbl_usuario_enderecoWhereUniqueInput
    /**
     * In case the tbl_usuario_endereco found by the `where` argument doesn't exist, create a new tbl_usuario_endereco with this data.
     */
    create: XOR<tbl_usuario_enderecoCreateInput, tbl_usuario_enderecoUncheckedCreateInput>
    /**
     * In case the tbl_usuario_endereco was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_usuario_enderecoUpdateInput, tbl_usuario_enderecoUncheckedUpdateInput>
  }

  /**
   * tbl_usuario_endereco delete
   */
  export type tbl_usuario_enderecoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
    /**
     * Filter which tbl_usuario_endereco to delete.
     */
    where: tbl_usuario_enderecoWhereUniqueInput
  }

  /**
   * tbl_usuario_endereco deleteMany
   */
  export type tbl_usuario_enderecoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_usuario_enderecos to delete
     */
    where?: tbl_usuario_enderecoWhereInput
  }

  /**
   * tbl_usuario_endereco without action
   */
  export type tbl_usuario_enderecoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_usuario_endereco
     */
    select?: tbl_usuario_enderecoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tbl_usuario_enderecoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Tbl_enderecoScalarFieldEnum: {
    id_endereco: 'id_endereco',
    logradouro: 'logradouro',
    numero_casa: 'numero_casa',
    complemento: 'complemento',
    bairro: 'bairro',
    estado: 'estado',
    cidade: 'cidade',
    cep: 'cep',
    status: 'status'
  };

  export type Tbl_enderecoScalarFieldEnum = (typeof Tbl_enderecoScalarFieldEnum)[keyof typeof Tbl_enderecoScalarFieldEnum]


  export const Tbl_usuarioScalarFieldEnum: {
    id_usuario: 'id_usuario',
    nome: 'nome',
    nome_usuario: 'nome_usuario',
    foto_usuario: 'foto_usuario',
    descricao: 'descricao',
    email: 'email',
    senha: 'senha',
    cpf: 'cpf',
    data_nascimento: 'data_nascimento',
    telefone: 'telefone',
    disponibilidade: 'disponibilidade',
    status: 'status'
  };

  export type Tbl_usuarioScalarFieldEnum = (typeof Tbl_usuarioScalarFieldEnum)[keyof typeof Tbl_usuarioScalarFieldEnum]


  export const Tbl_usuario_enderecoScalarFieldEnum: {
    id_usuario_endereco: 'id_usuario_endereco',
    id_endereco: 'id_endereco',
    id_usuario: 'id_usuario',
    status: 'status'
  };

  export type Tbl_usuario_enderecoScalarFieldEnum = (typeof Tbl_usuario_enderecoScalarFieldEnum)[keyof typeof Tbl_usuario_enderecoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type tbl_enderecoWhereInput = {
    AND?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    OR?: tbl_enderecoWhereInput[]
    NOT?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    id_endereco?: IntFilter<"tbl_endereco"> | number
    logradouro?: StringFilter<"tbl_endereco"> | string
    numero_casa?: IntFilter<"tbl_endereco"> | number
    complemento?: StringNullableFilter<"tbl_endereco"> | string | null
    bairro?: StringFilter<"tbl_endereco"> | string
    estado?: StringFilter<"tbl_endereco"> | string
    cidade?: StringFilter<"tbl_endereco"> | string
    cep?: StringNullableFilter<"tbl_endereco"> | string | null
    status?: BoolFilter<"tbl_endereco"> | boolean
    tbl_usuario_endereco?: Tbl_usuario_enderecoListRelationFilter
  }

  export type tbl_enderecoOrderByWithRelationInput = {
    id_endereco?: SortOrder
    logradouro?: SortOrder
    numero_casa?: SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    cep?: SortOrderInput | SortOrder
    status?: SortOrder
    tbl_usuario_endereco?: tbl_usuario_enderecoOrderByRelationAggregateInput
  }

  export type tbl_enderecoWhereUniqueInput = Prisma.AtLeast<{
    id_endereco?: number
    AND?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    OR?: tbl_enderecoWhereInput[]
    NOT?: tbl_enderecoWhereInput | tbl_enderecoWhereInput[]
    logradouro?: StringFilter<"tbl_endereco"> | string
    numero_casa?: IntFilter<"tbl_endereco"> | number
    complemento?: StringNullableFilter<"tbl_endereco"> | string | null
    bairro?: StringFilter<"tbl_endereco"> | string
    estado?: StringFilter<"tbl_endereco"> | string
    cidade?: StringFilter<"tbl_endereco"> | string
    cep?: StringNullableFilter<"tbl_endereco"> | string | null
    status?: BoolFilter<"tbl_endereco"> | boolean
    tbl_usuario_endereco?: Tbl_usuario_enderecoListRelationFilter
  }, "id_endereco">

  export type tbl_enderecoOrderByWithAggregationInput = {
    id_endereco?: SortOrder
    logradouro?: SortOrder
    numero_casa?: SortOrder
    complemento?: SortOrderInput | SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    cep?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: tbl_enderecoCountOrderByAggregateInput
    _avg?: tbl_enderecoAvgOrderByAggregateInput
    _max?: tbl_enderecoMaxOrderByAggregateInput
    _min?: tbl_enderecoMinOrderByAggregateInput
    _sum?: tbl_enderecoSumOrderByAggregateInput
  }

  export type tbl_enderecoScalarWhereWithAggregatesInput = {
    AND?: tbl_enderecoScalarWhereWithAggregatesInput | tbl_enderecoScalarWhereWithAggregatesInput[]
    OR?: tbl_enderecoScalarWhereWithAggregatesInput[]
    NOT?: tbl_enderecoScalarWhereWithAggregatesInput | tbl_enderecoScalarWhereWithAggregatesInput[]
    id_endereco?: IntWithAggregatesFilter<"tbl_endereco"> | number
    logradouro?: StringWithAggregatesFilter<"tbl_endereco"> | string
    numero_casa?: IntWithAggregatesFilter<"tbl_endereco"> | number
    complemento?: StringNullableWithAggregatesFilter<"tbl_endereco"> | string | null
    bairro?: StringWithAggregatesFilter<"tbl_endereco"> | string
    estado?: StringWithAggregatesFilter<"tbl_endereco"> | string
    cidade?: StringWithAggregatesFilter<"tbl_endereco"> | string
    cep?: StringNullableWithAggregatesFilter<"tbl_endereco"> | string | null
    status?: BoolWithAggregatesFilter<"tbl_endereco"> | boolean
  }

  export type tbl_usuarioWhereInput = {
    AND?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    OR?: tbl_usuarioWhereInput[]
    NOT?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    id_usuario?: IntFilter<"tbl_usuario"> | number
    nome?: StringFilter<"tbl_usuario"> | string
    nome_usuario?: StringFilter<"tbl_usuario"> | string
    foto_usuario?: StringNullableFilter<"tbl_usuario"> | string | null
    descricao?: StringNullableFilter<"tbl_usuario"> | string | null
    email?: StringFilter<"tbl_usuario"> | string
    senha?: StringFilter<"tbl_usuario"> | string
    cpf?: StringFilter<"tbl_usuario"> | string
    data_nascimento?: DateTimeFilter<"tbl_usuario"> | Date | string
    telefone?: StringFilter<"tbl_usuario"> | string
    disponibilidade?: BoolFilter<"tbl_usuario"> | boolean
    status?: BoolFilter<"tbl_usuario"> | boolean
    tbl_usuario_endereco?: Tbl_usuario_enderecoListRelationFilter
  }

  export type tbl_usuarioOrderByWithRelationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    nome_usuario?: SortOrder
    foto_usuario?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    email?: SortOrder
    senha?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    telefone?: SortOrder
    disponibilidade?: SortOrder
    status?: SortOrder
    tbl_usuario_endereco?: tbl_usuario_enderecoOrderByRelationAggregateInput
  }

  export type tbl_usuarioWhereUniqueInput = Prisma.AtLeast<{
    id_usuario?: number
    AND?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    OR?: tbl_usuarioWhereInput[]
    NOT?: tbl_usuarioWhereInput | tbl_usuarioWhereInput[]
    nome?: StringFilter<"tbl_usuario"> | string
    nome_usuario?: StringFilter<"tbl_usuario"> | string
    foto_usuario?: StringNullableFilter<"tbl_usuario"> | string | null
    descricao?: StringNullableFilter<"tbl_usuario"> | string | null
    email?: StringFilter<"tbl_usuario"> | string
    senha?: StringFilter<"tbl_usuario"> | string
    cpf?: StringFilter<"tbl_usuario"> | string
    data_nascimento?: DateTimeFilter<"tbl_usuario"> | Date | string
    telefone?: StringFilter<"tbl_usuario"> | string
    disponibilidade?: BoolFilter<"tbl_usuario"> | boolean
    status?: BoolFilter<"tbl_usuario"> | boolean
    tbl_usuario_endereco?: Tbl_usuario_enderecoListRelationFilter
  }, "id_usuario">

  export type tbl_usuarioOrderByWithAggregationInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    nome_usuario?: SortOrder
    foto_usuario?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    email?: SortOrder
    senha?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    telefone?: SortOrder
    disponibilidade?: SortOrder
    status?: SortOrder
    _count?: tbl_usuarioCountOrderByAggregateInput
    _avg?: tbl_usuarioAvgOrderByAggregateInput
    _max?: tbl_usuarioMaxOrderByAggregateInput
    _min?: tbl_usuarioMinOrderByAggregateInput
    _sum?: tbl_usuarioSumOrderByAggregateInput
  }

  export type tbl_usuarioScalarWhereWithAggregatesInput = {
    AND?: tbl_usuarioScalarWhereWithAggregatesInput | tbl_usuarioScalarWhereWithAggregatesInput[]
    OR?: tbl_usuarioScalarWhereWithAggregatesInput[]
    NOT?: tbl_usuarioScalarWhereWithAggregatesInput | tbl_usuarioScalarWhereWithAggregatesInput[]
    id_usuario?: IntWithAggregatesFilter<"tbl_usuario"> | number
    nome?: StringWithAggregatesFilter<"tbl_usuario"> | string
    nome_usuario?: StringWithAggregatesFilter<"tbl_usuario"> | string
    foto_usuario?: StringNullableWithAggregatesFilter<"tbl_usuario"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"tbl_usuario"> | string | null
    email?: StringWithAggregatesFilter<"tbl_usuario"> | string
    senha?: StringWithAggregatesFilter<"tbl_usuario"> | string
    cpf?: StringWithAggregatesFilter<"tbl_usuario"> | string
    data_nascimento?: DateTimeWithAggregatesFilter<"tbl_usuario"> | Date | string
    telefone?: StringWithAggregatesFilter<"tbl_usuario"> | string
    disponibilidade?: BoolWithAggregatesFilter<"tbl_usuario"> | boolean
    status?: BoolWithAggregatesFilter<"tbl_usuario"> | boolean
  }

  export type tbl_usuario_enderecoWhereInput = {
    AND?: tbl_usuario_enderecoWhereInput | tbl_usuario_enderecoWhereInput[]
    OR?: tbl_usuario_enderecoWhereInput[]
    NOT?: tbl_usuario_enderecoWhereInput | tbl_usuario_enderecoWhereInput[]
    id_usuario_endereco?: IntFilter<"tbl_usuario_endereco"> | number
    id_endereco?: IntFilter<"tbl_usuario_endereco"> | number
    id_usuario?: IntFilter<"tbl_usuario_endereco"> | number
    status?: BoolFilter<"tbl_usuario_endereco"> | boolean
    tbl_endereco?: XOR<Tbl_enderecoRelationFilter, tbl_enderecoWhereInput>
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
  }

  export type tbl_usuario_enderecoOrderByWithRelationInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
    status?: SortOrder
    tbl_endereco?: tbl_enderecoOrderByWithRelationInput
    tbl_usuario?: tbl_usuarioOrderByWithRelationInput
  }

  export type tbl_usuario_enderecoWhereUniqueInput = Prisma.AtLeast<{
    id_usuario_endereco?: number
    AND?: tbl_usuario_enderecoWhereInput | tbl_usuario_enderecoWhereInput[]
    OR?: tbl_usuario_enderecoWhereInput[]
    NOT?: tbl_usuario_enderecoWhereInput | tbl_usuario_enderecoWhereInput[]
    id_endereco?: IntFilter<"tbl_usuario_endereco"> | number
    id_usuario?: IntFilter<"tbl_usuario_endereco"> | number
    status?: BoolFilter<"tbl_usuario_endereco"> | boolean
    tbl_endereco?: XOR<Tbl_enderecoRelationFilter, tbl_enderecoWhereInput>
    tbl_usuario?: XOR<Tbl_usuarioRelationFilter, tbl_usuarioWhereInput>
  }, "id_usuario_endereco">

  export type tbl_usuario_enderecoOrderByWithAggregationInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
    status?: SortOrder
    _count?: tbl_usuario_enderecoCountOrderByAggregateInput
    _avg?: tbl_usuario_enderecoAvgOrderByAggregateInput
    _max?: tbl_usuario_enderecoMaxOrderByAggregateInput
    _min?: tbl_usuario_enderecoMinOrderByAggregateInput
    _sum?: tbl_usuario_enderecoSumOrderByAggregateInput
  }

  export type tbl_usuario_enderecoScalarWhereWithAggregatesInput = {
    AND?: tbl_usuario_enderecoScalarWhereWithAggregatesInput | tbl_usuario_enderecoScalarWhereWithAggregatesInput[]
    OR?: tbl_usuario_enderecoScalarWhereWithAggregatesInput[]
    NOT?: tbl_usuario_enderecoScalarWhereWithAggregatesInput | tbl_usuario_enderecoScalarWhereWithAggregatesInput[]
    id_usuario_endereco?: IntWithAggregatesFilter<"tbl_usuario_endereco"> | number
    id_endereco?: IntWithAggregatesFilter<"tbl_usuario_endereco"> | number
    id_usuario?: IntWithAggregatesFilter<"tbl_usuario_endereco"> | number
    status?: BoolWithAggregatesFilter<"tbl_usuario_endereco"> | boolean
  }

  export type tbl_enderecoCreateInput = {
    logradouro: string
    numero_casa: number
    complemento?: string | null
    bairro: string
    estado: string
    cidade: string
    cep?: string | null
    status: boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoCreateNestedManyWithoutTbl_enderecoInput
  }

  export type tbl_enderecoUncheckedCreateInput = {
    id_endereco?: number
    logradouro: string
    numero_casa: number
    complemento?: string | null
    bairro: string
    estado: string
    cidade: string
    cep?: string | null
    status: boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoUncheckedCreateNestedManyWithoutTbl_enderecoInput
  }

  export type tbl_enderecoUpdateInput = {
    logradouro?: StringFieldUpdateOperationsInput | string
    numero_casa?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoUpdateManyWithoutTbl_enderecoNestedInput
  }

  export type tbl_enderecoUncheckedUpdateInput = {
    id_endereco?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero_casa?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_enderecoNestedInput
  }

  export type tbl_enderecoCreateManyInput = {
    id_endereco?: number
    logradouro: string
    numero_casa: number
    complemento?: string | null
    bairro: string
    estado: string
    cidade: string
    cep?: string | null
    status: boolean
  }

  export type tbl_enderecoUpdateManyMutationInput = {
    logradouro?: StringFieldUpdateOperationsInput | string
    numero_casa?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_enderecoUncheckedUpdateManyInput = {
    id_endereco?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero_casa?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuarioCreateInput = {
    nome: string
    nome_usuario: string
    foto_usuario?: string | null
    descricao?: string | null
    email: string
    senha: string
    cpf: string
    data_nascimento: Date | string
    telefone: string
    disponibilidade: boolean
    status: boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUncheckedCreateInput = {
    id_usuario?: number
    nome: string
    nome_usuario: string
    foto_usuario?: string | null
    descricao?: string | null
    email: string
    senha: string
    cpf: string
    data_nascimento: Date | string
    telefone: string
    disponibilidade: boolean
    status: boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoUncheckedCreateNestedManyWithoutTbl_usuarioInput
  }

  export type tbl_usuarioUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_usuario?: StringFieldUpdateOperationsInput | string
    foto_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefone?: StringFieldUpdateOperationsInput | string
    disponibilidade?: BoolFieldUpdateOperationsInput | boolean
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioUncheckedUpdateInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_usuario?: StringFieldUpdateOperationsInput | string
    foto_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefone?: StringFieldUpdateOperationsInput | string
    disponibilidade?: BoolFieldUpdateOperationsInput | boolean
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_usuario_endereco?: tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_usuarioNestedInput
  }

  export type tbl_usuarioCreateManyInput = {
    id_usuario?: number
    nome: string
    nome_usuario: string
    foto_usuario?: string | null
    descricao?: string | null
    email: string
    senha: string
    cpf: string
    data_nascimento: Date | string
    telefone: string
    disponibilidade: boolean
    status: boolean
  }

  export type tbl_usuarioUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_usuario?: StringFieldUpdateOperationsInput | string
    foto_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefone?: StringFieldUpdateOperationsInput | string
    disponibilidade?: BoolFieldUpdateOperationsInput | boolean
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuarioUncheckedUpdateManyInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_usuario?: StringFieldUpdateOperationsInput | string
    foto_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefone?: StringFieldUpdateOperationsInput | string
    disponibilidade?: BoolFieldUpdateOperationsInput | boolean
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoCreateInput = {
    status: boolean
    tbl_endereco: tbl_enderecoCreateNestedOneWithoutTbl_usuario_enderecoInput
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_usuario_enderecoInput
  }

  export type tbl_usuario_enderecoUncheckedCreateInput = {
    id_usuario_endereco?: number
    id_endereco: number
    id_usuario: number
    status: boolean
  }

  export type tbl_usuario_enderecoUpdateInput = {
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_endereco?: tbl_enderecoUpdateOneRequiredWithoutTbl_usuario_enderecoNestedInput
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_usuario_enderecoNestedInput
  }

  export type tbl_usuario_enderecoUncheckedUpdateInput = {
    id_usuario_endereco?: IntFieldUpdateOperationsInput | number
    id_endereco?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoCreateManyInput = {
    id_usuario_endereco?: number
    id_endereco: number
    id_usuario: number
    status: boolean
  }

  export type tbl_usuario_enderecoUpdateManyMutationInput = {
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoUncheckedUpdateManyInput = {
    id_usuario_endereco?: IntFieldUpdateOperationsInput | number
    id_endereco?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Tbl_usuario_enderecoListRelationFilter = {
    every?: tbl_usuario_enderecoWhereInput
    some?: tbl_usuario_enderecoWhereInput
    none?: tbl_usuario_enderecoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type tbl_usuario_enderecoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tbl_enderecoCountOrderByAggregateInput = {
    id_endereco?: SortOrder
    logradouro?: SortOrder
    numero_casa?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    cep?: SortOrder
    status?: SortOrder
  }

  export type tbl_enderecoAvgOrderByAggregateInput = {
    id_endereco?: SortOrder
    numero_casa?: SortOrder
  }

  export type tbl_enderecoMaxOrderByAggregateInput = {
    id_endereco?: SortOrder
    logradouro?: SortOrder
    numero_casa?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    cep?: SortOrder
    status?: SortOrder
  }

  export type tbl_enderecoMinOrderByAggregateInput = {
    id_endereco?: SortOrder
    logradouro?: SortOrder
    numero_casa?: SortOrder
    complemento?: SortOrder
    bairro?: SortOrder
    estado?: SortOrder
    cidade?: SortOrder
    cep?: SortOrder
    status?: SortOrder
  }

  export type tbl_enderecoSumOrderByAggregateInput = {
    id_endereco?: SortOrder
    numero_casa?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type tbl_usuarioCountOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    nome_usuario?: SortOrder
    foto_usuario?: SortOrder
    descricao?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    telefone?: SortOrder
    disponibilidade?: SortOrder
    status?: SortOrder
  }

  export type tbl_usuarioAvgOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type tbl_usuarioMaxOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    nome_usuario?: SortOrder
    foto_usuario?: SortOrder
    descricao?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    telefone?: SortOrder
    disponibilidade?: SortOrder
    status?: SortOrder
  }

  export type tbl_usuarioMinOrderByAggregateInput = {
    id_usuario?: SortOrder
    nome?: SortOrder
    nome_usuario?: SortOrder
    foto_usuario?: SortOrder
    descricao?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    cpf?: SortOrder
    data_nascimento?: SortOrder
    telefone?: SortOrder
    disponibilidade?: SortOrder
    status?: SortOrder
  }

  export type tbl_usuarioSumOrderByAggregateInput = {
    id_usuario?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Tbl_enderecoRelationFilter = {
    is?: tbl_enderecoWhereInput
    isNot?: tbl_enderecoWhereInput
  }

  export type Tbl_usuarioRelationFilter = {
    is?: tbl_usuarioWhereInput
    isNot?: tbl_usuarioWhereInput
  }

  export type tbl_usuario_enderecoCountOrderByAggregateInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
    status?: SortOrder
  }

  export type tbl_usuario_enderecoAvgOrderByAggregateInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
  }

  export type tbl_usuario_enderecoMaxOrderByAggregateInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
    status?: SortOrder
  }

  export type tbl_usuario_enderecoMinOrderByAggregateInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
    status?: SortOrder
  }

  export type tbl_usuario_enderecoSumOrderByAggregateInput = {
    id_usuario_endereco?: SortOrder
    id_endereco?: SortOrder
    id_usuario?: SortOrder
  }

  export type tbl_usuario_enderecoCreateNestedManyWithoutTbl_enderecoInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput> | tbl_usuario_enderecoCreateWithoutTbl_enderecoInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_enderecoInputEnvelope
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
  }

  export type tbl_usuario_enderecoUncheckedCreateNestedManyWithoutTbl_enderecoInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput> | tbl_usuario_enderecoCreateWithoutTbl_enderecoInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_enderecoInputEnvelope
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type tbl_usuario_enderecoUpdateManyWithoutTbl_enderecoNestedInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput> | tbl_usuario_enderecoCreateWithoutTbl_enderecoInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput[]
    upsert?: tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_enderecoInput | tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_enderecoInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_enderecoInputEnvelope
    set?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    disconnect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    delete?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    update?: tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_enderecoInput | tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_enderecoInput[]
    updateMany?: tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_enderecoInput | tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_enderecoInput[]
    deleteMany?: tbl_usuario_enderecoScalarWhereInput | tbl_usuario_enderecoScalarWhereInput[]
  }

  export type tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_enderecoNestedInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput> | tbl_usuario_enderecoCreateWithoutTbl_enderecoInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput[]
    upsert?: tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_enderecoInput | tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_enderecoInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_enderecoInputEnvelope
    set?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    disconnect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    delete?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    update?: tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_enderecoInput | tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_enderecoInput[]
    updateMany?: tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_enderecoInput | tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_enderecoInput[]
    deleteMany?: tbl_usuario_enderecoScalarWhereInput | tbl_usuario_enderecoScalarWhereInput[]
  }

  export type tbl_usuario_enderecoCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput> | tbl_usuario_enderecoCreateWithoutTbl_usuarioInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
  }

  export type tbl_usuario_enderecoUncheckedCreateNestedManyWithoutTbl_usuarioInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput> | tbl_usuario_enderecoCreateWithoutTbl_usuarioInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_usuarioInputEnvelope
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type tbl_usuario_enderecoUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput> | tbl_usuario_enderecoCreateWithoutTbl_usuarioInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_usuarioInputEnvelope
    set?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    disconnect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    delete?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    update?: tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_usuario_enderecoScalarWhereInput | tbl_usuario_enderecoScalarWhereInput[]
  }

  export type tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_usuarioNestedInput = {
    create?: XOR<tbl_usuario_enderecoCreateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput> | tbl_usuario_enderecoCreateWithoutTbl_usuarioInput[] | tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput[]
    connectOrCreate?: tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput | tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput[]
    upsert?: tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_usuarioInput | tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_usuarioInput[]
    createMany?: tbl_usuario_enderecoCreateManyTbl_usuarioInputEnvelope
    set?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    disconnect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    delete?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    connect?: tbl_usuario_enderecoWhereUniqueInput | tbl_usuario_enderecoWhereUniqueInput[]
    update?: tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_usuarioInput | tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_usuarioInput[]
    updateMany?: tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_usuarioInput | tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_usuarioInput[]
    deleteMany?: tbl_usuario_enderecoScalarWhereInput | tbl_usuario_enderecoScalarWhereInput[]
  }

  export type tbl_enderecoCreateNestedOneWithoutTbl_usuario_enderecoInput = {
    create?: XOR<tbl_enderecoCreateWithoutTbl_usuario_enderecoInput, tbl_enderecoUncheckedCreateWithoutTbl_usuario_enderecoInput>
    connectOrCreate?: tbl_enderecoCreateOrConnectWithoutTbl_usuario_enderecoInput
    connect?: tbl_enderecoWhereUniqueInput
  }

  export type tbl_usuarioCreateNestedOneWithoutTbl_usuario_enderecoInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_usuario_enderecoInput, tbl_usuarioUncheckedCreateWithoutTbl_usuario_enderecoInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_usuario_enderecoInput
    connect?: tbl_usuarioWhereUniqueInput
  }

  export type tbl_enderecoUpdateOneRequiredWithoutTbl_usuario_enderecoNestedInput = {
    create?: XOR<tbl_enderecoCreateWithoutTbl_usuario_enderecoInput, tbl_enderecoUncheckedCreateWithoutTbl_usuario_enderecoInput>
    connectOrCreate?: tbl_enderecoCreateOrConnectWithoutTbl_usuario_enderecoInput
    upsert?: tbl_enderecoUpsertWithoutTbl_usuario_enderecoInput
    connect?: tbl_enderecoWhereUniqueInput
    update?: XOR<XOR<tbl_enderecoUpdateToOneWithWhereWithoutTbl_usuario_enderecoInput, tbl_enderecoUpdateWithoutTbl_usuario_enderecoInput>, tbl_enderecoUncheckedUpdateWithoutTbl_usuario_enderecoInput>
  }

  export type tbl_usuarioUpdateOneRequiredWithoutTbl_usuario_enderecoNestedInput = {
    create?: XOR<tbl_usuarioCreateWithoutTbl_usuario_enderecoInput, tbl_usuarioUncheckedCreateWithoutTbl_usuario_enderecoInput>
    connectOrCreate?: tbl_usuarioCreateOrConnectWithoutTbl_usuario_enderecoInput
    upsert?: tbl_usuarioUpsertWithoutTbl_usuario_enderecoInput
    connect?: tbl_usuarioWhereUniqueInput
    update?: XOR<XOR<tbl_usuarioUpdateToOneWithWhereWithoutTbl_usuario_enderecoInput, tbl_usuarioUpdateWithoutTbl_usuario_enderecoInput>, tbl_usuarioUncheckedUpdateWithoutTbl_usuario_enderecoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type tbl_usuario_enderecoCreateWithoutTbl_enderecoInput = {
    status: boolean
    tbl_usuario: tbl_usuarioCreateNestedOneWithoutTbl_usuario_enderecoInput
  }

  export type tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput = {
    id_usuario_endereco?: number
    id_usuario: number
    status: boolean
  }

  export type tbl_usuario_enderecoCreateOrConnectWithoutTbl_enderecoInput = {
    where: tbl_usuario_enderecoWhereUniqueInput
    create: XOR<tbl_usuario_enderecoCreateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput>
  }

  export type tbl_usuario_enderecoCreateManyTbl_enderecoInputEnvelope = {
    data: tbl_usuario_enderecoCreateManyTbl_enderecoInput | tbl_usuario_enderecoCreateManyTbl_enderecoInput[]
    skipDuplicates?: boolean
  }

  export type tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_enderecoInput = {
    where: tbl_usuario_enderecoWhereUniqueInput
    update: XOR<tbl_usuario_enderecoUpdateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedUpdateWithoutTbl_enderecoInput>
    create: XOR<tbl_usuario_enderecoCreateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_enderecoInput>
  }

  export type tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_enderecoInput = {
    where: tbl_usuario_enderecoWhereUniqueInput
    data: XOR<tbl_usuario_enderecoUpdateWithoutTbl_enderecoInput, tbl_usuario_enderecoUncheckedUpdateWithoutTbl_enderecoInput>
  }

  export type tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_enderecoInput = {
    where: tbl_usuario_enderecoScalarWhereInput
    data: XOR<tbl_usuario_enderecoUpdateManyMutationInput, tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_enderecoInput>
  }

  export type tbl_usuario_enderecoScalarWhereInput = {
    AND?: tbl_usuario_enderecoScalarWhereInput | tbl_usuario_enderecoScalarWhereInput[]
    OR?: tbl_usuario_enderecoScalarWhereInput[]
    NOT?: tbl_usuario_enderecoScalarWhereInput | tbl_usuario_enderecoScalarWhereInput[]
    id_usuario_endereco?: IntFilter<"tbl_usuario_endereco"> | number
    id_endereco?: IntFilter<"tbl_usuario_endereco"> | number
    id_usuario?: IntFilter<"tbl_usuario_endereco"> | number
    status?: BoolFilter<"tbl_usuario_endereco"> | boolean
  }

  export type tbl_usuario_enderecoCreateWithoutTbl_usuarioInput = {
    status: boolean
    tbl_endereco: tbl_enderecoCreateNestedOneWithoutTbl_usuario_enderecoInput
  }

  export type tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput = {
    id_usuario_endereco?: number
    id_endereco: number
    status: boolean
  }

  export type tbl_usuario_enderecoCreateOrConnectWithoutTbl_usuarioInput = {
    where: tbl_usuario_enderecoWhereUniqueInput
    create: XOR<tbl_usuario_enderecoCreateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_usuario_enderecoCreateManyTbl_usuarioInputEnvelope = {
    data: tbl_usuario_enderecoCreateManyTbl_usuarioInput | tbl_usuario_enderecoCreateManyTbl_usuarioInput[]
    skipDuplicates?: boolean
  }

  export type tbl_usuario_enderecoUpsertWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_usuario_enderecoWhereUniqueInput
    update: XOR<tbl_usuario_enderecoUpdateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedUpdateWithoutTbl_usuarioInput>
    create: XOR<tbl_usuario_enderecoCreateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedCreateWithoutTbl_usuarioInput>
  }

  export type tbl_usuario_enderecoUpdateWithWhereUniqueWithoutTbl_usuarioInput = {
    where: tbl_usuario_enderecoWhereUniqueInput
    data: XOR<tbl_usuario_enderecoUpdateWithoutTbl_usuarioInput, tbl_usuario_enderecoUncheckedUpdateWithoutTbl_usuarioInput>
  }

  export type tbl_usuario_enderecoUpdateManyWithWhereWithoutTbl_usuarioInput = {
    where: tbl_usuario_enderecoScalarWhereInput
    data: XOR<tbl_usuario_enderecoUpdateManyMutationInput, tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_usuarioInput>
  }

  export type tbl_enderecoCreateWithoutTbl_usuario_enderecoInput = {
    logradouro: string
    numero_casa: number
    complemento?: string | null
    bairro: string
    estado: string
    cidade: string
    cep?: string | null
    status: boolean
  }

  export type tbl_enderecoUncheckedCreateWithoutTbl_usuario_enderecoInput = {
    id_endereco?: number
    logradouro: string
    numero_casa: number
    complemento?: string | null
    bairro: string
    estado: string
    cidade: string
    cep?: string | null
    status: boolean
  }

  export type tbl_enderecoCreateOrConnectWithoutTbl_usuario_enderecoInput = {
    where: tbl_enderecoWhereUniqueInput
    create: XOR<tbl_enderecoCreateWithoutTbl_usuario_enderecoInput, tbl_enderecoUncheckedCreateWithoutTbl_usuario_enderecoInput>
  }

  export type tbl_usuarioCreateWithoutTbl_usuario_enderecoInput = {
    nome: string
    nome_usuario: string
    foto_usuario?: string | null
    descricao?: string | null
    email: string
    senha: string
    cpf: string
    data_nascimento: Date | string
    telefone: string
    disponibilidade: boolean
    status: boolean
  }

  export type tbl_usuarioUncheckedCreateWithoutTbl_usuario_enderecoInput = {
    id_usuario?: number
    nome: string
    nome_usuario: string
    foto_usuario?: string | null
    descricao?: string | null
    email: string
    senha: string
    cpf: string
    data_nascimento: Date | string
    telefone: string
    disponibilidade: boolean
    status: boolean
  }

  export type tbl_usuarioCreateOrConnectWithoutTbl_usuario_enderecoInput = {
    where: tbl_usuarioWhereUniqueInput
    create: XOR<tbl_usuarioCreateWithoutTbl_usuario_enderecoInput, tbl_usuarioUncheckedCreateWithoutTbl_usuario_enderecoInput>
  }

  export type tbl_enderecoUpsertWithoutTbl_usuario_enderecoInput = {
    update: XOR<tbl_enderecoUpdateWithoutTbl_usuario_enderecoInput, tbl_enderecoUncheckedUpdateWithoutTbl_usuario_enderecoInput>
    create: XOR<tbl_enderecoCreateWithoutTbl_usuario_enderecoInput, tbl_enderecoUncheckedCreateWithoutTbl_usuario_enderecoInput>
    where?: tbl_enderecoWhereInput
  }

  export type tbl_enderecoUpdateToOneWithWhereWithoutTbl_usuario_enderecoInput = {
    where?: tbl_enderecoWhereInput
    data: XOR<tbl_enderecoUpdateWithoutTbl_usuario_enderecoInput, tbl_enderecoUncheckedUpdateWithoutTbl_usuario_enderecoInput>
  }

  export type tbl_enderecoUpdateWithoutTbl_usuario_enderecoInput = {
    logradouro?: StringFieldUpdateOperationsInput | string
    numero_casa?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_enderecoUncheckedUpdateWithoutTbl_usuario_enderecoInput = {
    id_endereco?: IntFieldUpdateOperationsInput | number
    logradouro?: StringFieldUpdateOperationsInput | string
    numero_casa?: IntFieldUpdateOperationsInput | number
    complemento?: NullableStringFieldUpdateOperationsInput | string | null
    bairro?: StringFieldUpdateOperationsInput | string
    estado?: StringFieldUpdateOperationsInput | string
    cidade?: StringFieldUpdateOperationsInput | string
    cep?: NullableStringFieldUpdateOperationsInput | string | null
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuarioUpsertWithoutTbl_usuario_enderecoInput = {
    update: XOR<tbl_usuarioUpdateWithoutTbl_usuario_enderecoInput, tbl_usuarioUncheckedUpdateWithoutTbl_usuario_enderecoInput>
    create: XOR<tbl_usuarioCreateWithoutTbl_usuario_enderecoInput, tbl_usuarioUncheckedCreateWithoutTbl_usuario_enderecoInput>
    where?: tbl_usuarioWhereInput
  }

  export type tbl_usuarioUpdateToOneWithWhereWithoutTbl_usuario_enderecoInput = {
    where?: tbl_usuarioWhereInput
    data: XOR<tbl_usuarioUpdateWithoutTbl_usuario_enderecoInput, tbl_usuarioUncheckedUpdateWithoutTbl_usuario_enderecoInput>
  }

  export type tbl_usuarioUpdateWithoutTbl_usuario_enderecoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    nome_usuario?: StringFieldUpdateOperationsInput | string
    foto_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefone?: StringFieldUpdateOperationsInput | string
    disponibilidade?: BoolFieldUpdateOperationsInput | boolean
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuarioUncheckedUpdateWithoutTbl_usuario_enderecoInput = {
    id_usuario?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    nome_usuario?: StringFieldUpdateOperationsInput | string
    foto_usuario?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    cpf?: StringFieldUpdateOperationsInput | string
    data_nascimento?: DateTimeFieldUpdateOperationsInput | Date | string
    telefone?: StringFieldUpdateOperationsInput | string
    disponibilidade?: BoolFieldUpdateOperationsInput | boolean
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoCreateManyTbl_enderecoInput = {
    id_usuario_endereco?: number
    id_usuario: number
    status: boolean
  }

  export type tbl_usuario_enderecoUpdateWithoutTbl_enderecoInput = {
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_usuario?: tbl_usuarioUpdateOneRequiredWithoutTbl_usuario_enderecoNestedInput
  }

  export type tbl_usuario_enderecoUncheckedUpdateWithoutTbl_enderecoInput = {
    id_usuario_endereco?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_enderecoInput = {
    id_usuario_endereco?: IntFieldUpdateOperationsInput | number
    id_usuario?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoCreateManyTbl_usuarioInput = {
    id_usuario_endereco?: number
    id_endereco: number
    status: boolean
  }

  export type tbl_usuario_enderecoUpdateWithoutTbl_usuarioInput = {
    status?: BoolFieldUpdateOperationsInput | boolean
    tbl_endereco?: tbl_enderecoUpdateOneRequiredWithoutTbl_usuario_enderecoNestedInput
  }

  export type tbl_usuario_enderecoUncheckedUpdateWithoutTbl_usuarioInput = {
    id_usuario_endereco?: IntFieldUpdateOperationsInput | number
    id_endereco?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }

  export type tbl_usuario_enderecoUncheckedUpdateManyWithoutTbl_usuarioInput = {
    id_usuario_endereco?: IntFieldUpdateOperationsInput | number
    id_endereco?: IntFieldUpdateOperationsInput | number
    status?: BoolFieldUpdateOperationsInput | boolean
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use Tbl_enderecoCountOutputTypeDefaultArgs instead
     */
    export type Tbl_enderecoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_enderecoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tbl_usuarioCountOutputTypeDefaultArgs instead
     */
    export type Tbl_usuarioCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tbl_usuarioCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_enderecoDefaultArgs instead
     */
    export type tbl_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_enderecoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_usuarioDefaultArgs instead
     */
    export type tbl_usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_usuarioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_usuario_enderecoDefaultArgs instead
     */
    export type tbl_usuario_enderecoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_usuario_enderecoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}